package cn.zhanghub.designPattern.principle.interfaceSegregationPrinciple;

/**
 * 类描述：
 *  设计模式七大原则：2. 接口隔离原则
 *
 * (1)要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。
 *
 *      - 客户端不应该被迫依赖于它不使用的方法
 *      - 一个类对另一个类的依赖应该建立在最小的接口上
 *
 * (2)接口隔离原则和单一职责都是为了提高类的内聚性、降低它们之间的耦合性，体现了封装的思想，但两者是不同的：
 *      - 单一职责原则注重的是职责，而接口隔离原则注重的是对接口依赖的隔离。
 *      - 单一职责原则主要是约束类，它针对的是程序中的实现和细节；接口隔离原则主要约束接口，主要针对抽象和程序整体框架的构建。
 *
 * (3)接口隔离原则的实现方法
 *
 *  在具体应用接口隔离原则时，应该根据以下几个规则来衡量。
 *
 *     - 接口尽量小，但是要有限度。一个接口只服务于一个子模块或业务逻辑。
 *     - 为依赖接口的类定制服务。只提供调用者需要的方法，屏蔽不需要的方法。
 *     - 了解环境，拒绝盲从。每个项目或产品都有选定的环境因素，环境不同，接口拆分的标准就不同深入了解业务逻辑。
 *     - 提高内聚，减少对外交互。使接口用最少的方法去完成最多的事情。
 *
 * @ClassName InterfaceSegregationPrinciple
 * @Author 张文军
 * @Date 2021/4/21 22:45
 * @Version 1.0
 */

public class InterfaceSegregationPrinciple{

}
